name: Patch Template

on:
  pull_request:
    types: [closed]
    branches:
      - main

jobs:
  template-matrix:
    runs-on: ubuntu-latest
    steps:
      - id: templates
        run: |
          framework=`echo '${{ github.head_ref }}' | jq -Rr 'split("-")[2]'`;
          templates=$(gh search repos --owner searchspring "snapfu-template-$framework" --json name --jq '[.[].name]')
          echo "templates=$templates" >> $GITHUB_OUTPUT
        env:
          GITHUB_TOKEN: ${{ secrets.MACHINE_ACTION_WORKFLOW_PAT }}
    outputs:
      templates: ${{ steps.templates.outputs.templates }}
  patch-template:
    if: github.event.pull_request.merged == true && startsWith( github.head_ref, 'patch-generate-' ) == true && needs.template-matrix.outputs.templates != '[]'
    runs-on: ubuntu-latest
    needs:
      - template-matrix
    strategy:
      matrix:
        template: ${{ fromJSON(needs.template-matrix.outputs.templates) }}
    steps:
      - name: Extract Variables
        id: variables
        run: |
          framework=`echo '${{ github.head_ref }}' | jq -Rr 'split("-")[2]'`;
          echo "::set-output name=framework::$framework";
          echo "Using framework: $framework";

          version=`echo '${{ github.head_ref }}' | jq -Rr 'split("-")[3]'`;
          echo "::set-output name=version::$version";
          echo "Using version: $version";

      - name: Validate Variables
        run: |
          if [ "${{ steps.variables.outputs.framework }}" == "" ]; then 
            echo "Could not determine framework";
            exit 1;
          fi;
          if [ "${{ steps.variables.outputs.version }}" == "" ]; then 
            echo "Could not determine version";
            exit 1;
          fi;

      - name: Setup Node
        id: setup-node
        uses: actions/setup-node@v2
        with:
          node-version: 16

      - name: Install Snapfu
        run: |
          npm install -g snapfu

      - name: Checkout Template
        uses: actions/checkout@v3
        with:
          repository: "searchspring/${{ matrix.template }}"
          path: "${{ matrix.template }}"
          ref: "production"
          token: ${{ secrets.MACHINE_ACTION_WORKFLOW_PAT }}

      - name: Patch Template
        working-directory: ${{ matrix.template }}
        run: |
          git config --global user.name "searchspring-machine"
          git config --global user.email "machine@searchspring.com"
          git checkout -b patch-${{ matrix.template }}-${{ steps.variables.outputs.version }}
          snapfu patch apply ${{ steps.variables.outputs.version }}
          touch test.txt && echo "test" >> test.txt
          git add .
          git commit -m "auto generated template patch from 'Patch Template' action workflow"
          git push -u origin patch-${{ matrix.template }}-${{ steps.variables.outputs.version }}
 
      - name: Create PR
        run: |
          gh pr create \
            --title "Patch Template ${{ matrix.template }} to ${{ steps.variables.outputs.version }}" \
            --body "" \
            --repo "https://github.com/searchspring/${{ matrix.template }}" \
            --base "production" \
            --head "patch-${{ matrix.template }}-${{ steps.variables.outputs.version }}" \
            --project "Snap Beta" \
            --reviewer "searchspring/snap-team"
        env:
          GITHUB_TOKEN: ${{ secrets.MACHINE_ACTION_WORKFLOW_PAT }}
